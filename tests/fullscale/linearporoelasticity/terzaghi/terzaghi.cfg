# ----------------------------------------------------------------------
# solution
# ----------------------------------------------------------------------
[pylithapp.problem.solution.subfields.displacement]
basis_order = 1

[pylithapp.problem.solution.subfields.pressure]
basis_order = 1

[pylithapp.problem.solution.subfields.trace_strain]
basis_order = 1

# ----------------------------------------------------------------------
# materials
# ----------------------------------------------------------------------
[pylithapp.problem]
# Create an array of one material
materials = [poroelastic]
materials.poroelastic = pylith.materials.Poroelasticity

[pylithapp.problem.materials.poroelastic]
db_auxiliary_field = spatialdata.spatialdb.UniformDB
db_auxiliary_field.label = Poroelastic properties
db_auxiliary_field.values = [solid_density, fluid_density, fluid_viscosity, shear_modulus, undrained_bulk_modulus, biot_coefficient, biot_modulus, isotropic_permeability]
db_auxiliary_field.data   = [ 2500*kg/m**3,  1000*kg/m**3,        1.0*Pa*s,        3.0*Pa,                9.76*Pa,              0.6,       16.0*Pa,              1.5*m**2]

# # ----------------------------------------------------------------------
# # initial conditions
# # ----------------------------------------------------------------------
# [pylithapp.problem]
# ic = [domain]
#
# ic.domain.db = spatialdata.spatialdb.SimpleDB
# ic.domain.db.label = Initial conditions for domain
# ic.domain.db.iohandler.filename = axialdisp_ic.spatialdb
# ic.domain.db.query_type = linear

# ----------------------------------------------------------------------
# boundary conditions
# ----------------------------------------------------------------------
[pylithapp.problem]
bc = [x_neg,x_pos,y_neg_neu,y_neg_dir,y_pos]

bc.x_pos = pylith.bc.DirichletTimeDependent
bc.x_neg = pylith.bc.DirichletTimeDependent
bc.y_neg_neu = pylith.bc.NeumannTimeDependent
bc.y_neg_dir = pylith.bc.DirichletTimeDependent
bc.y_pos = pylith.bc.DirichletTimeDependent
# ------------------------------------------------------------------------------
[pylithapp.problem.bc.x_pos]
# Set Ux=+2.0*m on the +x boundary.
constrained_dof = [0]
label = edge_xpos
field = displacement
# The spatial database must contain both components even though we do
# not constrain the y component.
db_auxiliary_field = pylith.bc.ZeroDB
db_auxiliary_field.label = Dirichlet BC on +x boundary

# ------------------------------------------------------------------------------
[pylithapp.problem.bc.x_neg]
constrained_dof = [0]
label = edge_xneg
field = displacement
db_auxiliary_field = pylith.bc.ZeroDB
db_auxiliary_field.label = Dirichlet BC on -x boundary

#db_auxiliary_field = spatialdata.spatialdb.UniformDB
#db_auxiliary_field.label = Dirichlet BC on -x boundary
#db_auxiliary_field.values = [initial_amplitude_x, initial_amplitude_y]
#db_auxiliary_field.data = [-0.0*m, 0*m]

# ------------------------------------------------------------------------------
[pylithapp.problem.bc.y_pos]
constrained_dof = [1]
label = edge_ypos
field = displacement
db_auxiliary_field = pylith.bc.ZeroDB
db_auxiliary_field.label = Dirichlet BC on -y boundary

# ------------------------------------------------------------------------------
[pylithapp.problem.bc.y_neg_neu]

label = edge_yneg
field = displacement
scale_name = pressure
use_initial = True
db_auxiliary_field = spatialdata.spatialdb.UniformDB
db_auxiliary_field.label = Neumann BC -y edge

db_auxiliary_field.values = [initial_amplitude_tangential, initial_amplitude_normal]
db_auxiliary_field.data = [0.0*Pa, +1.0*Pa]

auxiliary_subfields.initial_amplitude.basis_order = 1

# ------------------------------------------------------------------------------
[pylithapp.problem.bc.y_neg_dir]
constrained_dof = [0]
label = edge_yneg
field = pressure
db_auxiliary_field = pylith.bc.ZeroDB
#db_auxiliary_field = spatialdata.spatialdb.UniformDB
db_auxiliary_field.label = Dirichlet BC for pressure on -y edge
#db_auxiliary_field.values = [initial_amplitude]
#db_auxiliary_field.data = [-1*Pa]
#auxiliary_subfields.initial_amplitude.basis_order = 1
#auxiliary_subfields.initial_amplitude.quadrature_order = 2
#observers.observer.writer.filename = output/terzaghi-bc_ypos_dir.h5
#observers.observer.data_fields = [pressure]


# End of file
